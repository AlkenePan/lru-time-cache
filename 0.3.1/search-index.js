var searchIndex = {};
searchIndex["lru_time_cache"] = {"doc":"# Least Recently Used (LRU) Cache","items":[[3,"VacantEntry","lru_time_cache","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"LruCache","","Implementation of [LRU cache](index.html#least-recently-used-lru-cache).",null,null],[4,"Entry","","A view into a single entry in an LRU cache, which may either be vacant or occupied.",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"with_capacity","","Constructor for capacity based `LruCache`.",1,{"inputs":[{"name":"usize"}],"output":{"name":"lrucache"}}],[11,"with_expiry_duration","","Constructor for time based `LruCache`.",1,{"inputs":[{"name":"duration"}],"output":{"name":"lrucache"}}],[11,"with_expiry_duration_and_capacity","","Constructor for dual-feature capacity and time based `LruCache`.",1,{"inputs":[{"name":"duration"},{"name":"usize"}],"output":{"name":"lrucache"}}],[11,"insert","","Inserts a key-value pair into the cache.",1,{"inputs":[{"name":"lrucache"},{"name":"key"},{"name":"value"}],"output":{"name":"option"}}],[11,"remove","","Removes a key-value pair from the cache.",1,{"inputs":[{"name":"lrucache"},{"name":"key"}],"output":{"name":"option"}}],[11,"get","","Retrieves a reference to the value stored under `key`, or `None` if the key doesn&#39;t exist.\nAlso removes expired elements and updates the time.",1,{"inputs":[{"name":"lrucache"},{"name":"key"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn&#39;t\nexist.  Also removes expired elements and updates the time.",1,{"inputs":[{"name":"lrucache"},{"name":"key"}],"output":{"name":"option"}}],[11,"contains_key","","Returns whether `key` exists in the cache or not.",1,{"inputs":[{"name":"lrucache"},{"name":"key"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the cache, i.e. the number of cached non-expired key-value pairs.",1,{"inputs":[{"name":"lrucache"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if there are no non-expired entries in the cache.",1,{"inputs":[{"name":"lrucache"}],"output":{"name":"bool"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",1,{"inputs":[{"name":"lrucache"},{"name":"key"}],"output":{"name":"entry"}}],[11,"retrieve_all","","Returns a clone of all elements as an unordered vector of key-value tuples.  Also removes\nexpired elements and updates the time.",1,{"inputs":[{"name":"lrucache"}],"output":{"name":"vec"}}],[11,"retrieve_all_ordered","","Returns a clone of all elements as a vector of key-value tuples ordered by most to least\nrecently updated.  Also removes expired elements and updates the time.",1,{"inputs":[{"name":"lrucache"}],"output":{"name":"vec"}}],[11,"clone","","",1,{"inputs":[{"name":"lrucache"}],"output":{"name":"lrucache"}}],[11,"insert","","Inserts a value",2,{"inputs":[{"name":"vacantentry"},{"name":"value"}],"output":{"name":"value"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"value"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",0,{"inputs":[{"name":"entry"},{"name":"value"}],"output":{"name":"value"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",0,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"value"}}]],"paths":[[4,"Entry"],[3,"LruCache"],[3,"VacantEntry"],[3,"OccupiedEntry"]]};
initSearch(searchIndex);
